{"version":3,"sources":["assets/air-horn.mp3","history.js","components/StartGame/StartGame.js","axios.js","data/actions/state.js","data/actions/api.js","components/StartGame/index.js","components/Timer/Timer.js","components/GameSetUp/GameSetUp.js","components/GameSetUp/index.js","components/GameRound/GameRound.js","components/GameRound/index.js","components/Completion/Completion.js","components/Completion/index.js","components/Loading.js","components/GameHistory/GameHistory.js","components/GameHistory/index.js","App.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["module","exports","createBrowserHistory","StartGame","props","team_1","team_2","state","handleTeam1","bind","handleTeam2","handleSubmit","handleResetClicked","e","this","setState","currentTarget","value","preventDefault","handleStartGame","handleReset","style","backgroundColor","minHeight","overflowY","className","to","Jumbotron","color","Form","onSubmit","fontSize","Group","controlId","Label","Control","type","onChange","Button","variant","disabled","Alert","onClick","Component","axios","create","baseURL","headers","Accept","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","getWords","category","dispatch","getState","isGot","categories","find","element","get","then","data","words","map","val","i","word","setCategory","updateCategory","connect","post","score_1","score_2","complete","id","postGame","history","push","Timer","useState","seconds","setSeconds","isActive","setIsActive","useSound","horn","play","useEffect","interval","setInterval","clearInterval","setTimeShown","GameSetUp","handleCategory","handleGameSetUp","padding","border","borderRadius","marginBottom","as","GameRound","science","celebrities","geography","object","scienceNumber","celebrityNumber","geographyNumber","objectNumber","handleIncrement","handlePass","handleComplete","completeError","alertColorPicker","wordsOn","setWordsOn","backgroundColorPicker","display","alignItems","textAlign","titlePicker","textTransform","categoryPicker","CardGroup","Card","Body","Title","Text","Footer","team","patch","patchScore","finish","catch","error","Completion","winner","decideWinner","flexDirection","justifyContent","Loading","children","loaded","Spinner","animation","role","GameHistory","gameHistory","handleLoad","Table","responsive","striped","bordered","scope","game","index","key","saveGames","App","Fragment","exact","path","initial","reducer","action","gameStart","newCategories","categoryOn","categoryUpdate","increaseScore","passWordChange","completeGameReducer","errorCompletingReducer","saveGamesReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4177351f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/air-horn.95897491.mp3\";","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nclass StartGame extends Component {\n    constructor(props) {\n        super(props);\n\n        let { team_1, team_2 } = props;\n\n        this.state = {\n            team_1,\n            team_2,\n        };\n\n        this.handleTeam1 = this.handleTeam1.bind(this);\n\n        this.handleTeam2 = this.handleTeam2.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.handleResetClicked = this.handleResetClicked.bind(this);\n    }\n\n    handleTeam1(e) {\n        this.setState({ team_1: e.currentTarget.value});\n    }\n\n    handleTeam2(e) {\n        this.setState({ team_2: e.currentTarget.value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.handleStartGame({ ...this.state });\n    }\n\n    handleResetClicked() {\n        this.setState({ team_1: \"\", team_2: \"\"});\n        this.props.handleReset();\n    }\n\n    render() {\n        let { team_1, team_2 } = this.state;\n        return (\n            <div style={{\n                backgroundColor: \"#84BCDA\",\n                minHeight: \"100vh\",\n                overflowY: \"hidden\",\n            }}>\n                <div className=\"container text-right\">\n                    <Link to =\"/game-history\">\n                        <button className=\"btn btn-info m-1\">\n                            View previous game results\n                        </button>\n                    </Link>\n                </div>\n                <div className=\"container\">\n                    <Jumbotron\n                        className=\"text-center\"\n                        style={{ backgroundColor: \"#067BC2\",\n                                color: \"white\"}}>\n                        <h1>The Great Hat Game</h1>\n                        <h3>Enter team names to start the game!</h3>\n                    </Jumbotron>\n                \n                    <Form \n                        onSubmit={ this.handleSubmit }\n                        style={{ fontSize: \"1.3rem\"}}>\n                        <Form.Group controlId=\"formBasicTeamOne\">\n                            <Form.Label>Team 1 Name:</Form.Label>\n                            <Form.Control type=\"text\"\n                                          onChange={ this.handleTeam1 }\n                                          value={ team_1 } />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicTeamOne\">\n                            <Form.Label>Team 2 Name:</Form.Label>\n                            <Form.Control type=\"text\"\n                                          onChange={ this.handleTeam2 }\n                                          value={ team_2 } />\n                        </Form.Group>\n                        <Button \n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={ team_1 === \"\" || team_2 === \"\" || team_1 === team_2 }\n                            style={{ fontSize: \"1.3rem\",\n                                     backgroundColor: \"#067BC2\"}}>\n                            Submit\n                        </Button>\n                        { team_1 !== \"\" && team_1 === team_2 ?\n                        <Alert variant=\"danger\" className=\"mt-3\">\n                            Duplicate team names, please amend\n                        </Alert> : null }\n                    </Form>\n                    <Button \n                            className=\"mt-2\"\n                            variant=\"danger\"\n                            type=\"click\"\n                            style={{ fontSize: \"1.3rem\" }}\n                            onClick= { this.handleResetClicked }>\n                            Reset\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StartGame;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"https://immense-earth-89289.herokuapp.com/api\",\n    headers: {\n        Accept: \"application/json\",\n    },\n});","// below shuffle function obtained from https://github.com/coolaj86/knuth-shuffle\nconst shuffle = (array) => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n\nexport const setCategory = ( data, category ) => {\n    return {\n        type: \"CATEGORY_SET\",\n        words: shuffle(data.map((val, i) => val.word)),\n        category: category,\n    };\n};\n\nexport const updateCategory = (category) => {\n    return {\n        type: \"CATEGORY_UPDATE\",\n        category: category,\n    }\n}\n\nexport const incrementScore = ( {score_1, score_2 }) => {\n    return {\n        type: \"INCREMENT_SCORE\",\n        score_1,\n        score_2,\n    }\n}\n\nexport const changeWord = () => {\n    return {\n        type: \"PASS\",\n    };\n}\n\nexport const startGame = ( { team_1, team_2, id }) => {\n    return {\n        type: \"START_GAME\",\n        team_1,\n        team_2,\n        id,\n    }\n}\n\nexport const completeGame = ({ complete }) => {\n    return {\n        type: \"COMPLETE_GAME\",\n        complete,\n    }\n}\n\nexport const errorCompleting = () => {\n    return {\n        type: \"ERROR_COMPLETING\",\n    }\n}\n\nexport const saveGames = (data) => {\n    return {\n        type: \"SAVE_GAMES\",\n        gameHistory: data,\n    };\n};\n\nexport const resetGame = (data) => {\n    return {\n        type: \"RESET_GAME\",\n    }\n}\n","import axios from \"../../axios\";\nimport history from \"../../history\";\n\nimport { setCategory, incrementScore, startGame, updateCategory, completeGame, errorCompleting, saveGames } from \"./state\";\n\nexport const getWords = (category) => (dispatch, getState) => {\n    const isGot = getState().categories.find(element => element===category);\n    \n    if (!isGot) {\n        axios.get(`/categories/${category}/words`).then(({ data }) => {\n            dispatch(setCategory(data.data, category));\n        });\n    }\n\n    if (isGot) {\n        dispatch(updateCategory(category));\n    }\n};\n\nexport const patchScore = (team) => {\n    return (dispatch, getState) => {\n        axios.patch(`games/${getState().id}/score`, {\n            team: team,\n        }).then(({ data }) => {\n            dispatch(incrementScore(data.data));\n        })\n    };\n}\n\nexport const postGame = ({ team_1, team_2 }) => {\n    return (dispatch) => {\n        axios.post('/games', {\n            team_1,\n            team_2,\n            score_1: 0,\n            score_2: 0,\n            complete: false,\n        }).then(({ data }) => {\n            dispatch(startGame(data.data));\n        })\n    };\n}\n\nexport const patchCompleteGame = () => {\n    return (dispatch, getState) => {\n        axios.patch(`games/${getState().id}/complete`, {\n            finish: true,\n        }).then(({ data }) => {\n            dispatch(completeGame(data.data));\n            history.push(\"/results\")\n        }).catch(error => {\n            dispatch(errorCompleting())\n        })\n    }\n}\n \n\nexport const getGames = () => {\n    return (dispatch) => {\n        return axios.get(\"/games\").then(({ data }) => {\n            dispatch(saveGames(data.data));\n        })\n    }\n}","import { connect } from \"react-redux\";\n\nimport StartGame from \"./StartGame\";\n\nimport history from \"../../history\";\nimport { postGame } from \"../../data/actions/api\";\nimport { resetGame } from \"../../data/actions/state\";\n\nconst mapStateToProps = ({ team_1, team_2 }) => {\n    return {\n        team_1,\n        team_2,\n      };\n  };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleStartGame: (data) => {\n        dispatch(postGame(data));\n\n        history.push(\"/round\");\n    },\n    handleReset: () => {\n      dispatch(resetGame());\n    }\n  };\n};\n\n\n// use the connect function to connect mapStateToProps\n// to the React component we want to wrap\n// returns a new React component\nexport default connect(mapStateToProps, mapDispatchToProps)(StartGame);","import React, { useState, useEffect } from \"react\";\n\nimport Button from 'react-bootstrap/Button';\n\nimport horn from '../../assets/air-horn.mp3';\nimport useSound from 'use-sound';\n\nconst Timer = () => {\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n    let toggle = () => {\n        setIsActive(!isActive);\n    }\n\n    let reset = () => {\n        setSeconds(0);\n        setIsActive(false);\n    }\n\n    const [play] = useSound(horn);\n\n    useEffect(() => {\n        let interval = null;\n        if(isActive && seconds < 45) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        } else if (isActive && seconds=== 45 ) {\n            play();\n            setIsActive(false);\n            clearInterval(interval);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds, play]);\n\n    let setTimeShown = (seconds) => {\n        let timeShown = \"0:00\";\n        if(seconds < 10) {\n            timeShown = `0:0${seconds}`;\n        } else if (seconds < 59) {\n            timeShown = `0:${seconds}`\n        } else {\n            timeShown = `01:00`;\n        }\n        return timeShown;\n    }    \n\n    return (\n        <div className=\"container text-center mt-4\" style={{fontSize: \"3rem\"}}>\n            <h3>Timer</h3>\n          <div>\n            {setTimeShown(seconds)}\n          </div>\n          <div>\n            {seconds=== 45 ?  \n            <p>Time's Up!</p> : \n            <Button variant=\"success\" onClick={toggle}>\n              {isActive ? 'Pause' : 'Start'}\n            </Button>\n            }{' '}\n            <Button variant=\"info\" onClick={reset}>\n              Reset\n            </Button>\n          </div>\n        </div>\n      );\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass GameSetUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            category: \"\",\n        };\n\n        this.handleCategory = this.handleCategory.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleCategory(e) {\n        this.setState({ category: e.currentTarget.value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.handleGameSetUp({ ...this.state });\n    }\n\n    render() {\n        let { category } = this.state;\n        return (\n            <div className=\"container mt-2\" style={{ padding: \"1rem\", border: \"4px solid lightGrey\", borderRadius: \"5px\", marginBottom: \"1rem\"}}>\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Select subject:</Form.Label>\n                        <Form.Control as=\"select\" value={category} onChange={this.handleCategory} style={{backgroundColor: \"lightGrey\"}}>\n                            <option value={\"\"}></option>\n                            <option value={\"1\"}>Science</option>\n                            <option value={\"2\"}>Celebrities</option>\n                            <option value={\"3\"}>Geography</option>\n                            <option value={\"4\"}>Object</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" disabled={category === \"\"}>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default GameSetUp;","import { connect } from \"react-redux\";\n\nimport GameSetUp from \"./GameSetUp\";\n\nimport { getWords } from \"../../data/actions/api\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleGameSetUp: (data) => {\n        dispatch(getWords(+data.category));\n    }\n  };\n};\n\n\n// use the connect function to connect mapStateToProps\n// to the React component we want to wrap\n// returns a new React component\nexport default connect(null, mapDispatchToProps)(GameSetUp);","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport Timer from '../Timer/Timer';\nimport Alert from 'react-bootstrap/Alert';\nimport GameSetUp from '../GameSetUp';\n\nconst GameRound = ({ id, team_1, team_2, score_1, score_2, science, celebrities, geography, object, scienceNumber, celebrityNumber, geographyNumber, objectNumber, category, handleIncrement, handlePass, handleComplete, completeError }) => {\n\n    let titlePicker = (category) => {\n        switch (category) {\n            case 1: return \"Science\"\n            case 2: return \"Celebrities\"\n            case 3: return \"Geography\"\n            case 4: return \"Object\"\n            default: return \"\";\n        }\n    }\n\n    let categoryPicker = (category, science, celebrities, geography, object, scienceNumber, celebrityNumber, geographyNumber, objectNumber) => {\n        switch (category) {\n            case 1: return science[scienceNumber]\n            case 2: return celebrities[celebrityNumber]\n            case 3: return geography[geographyNumber]\n            case 4: return object[objectNumber]\n            default: return \"\";\n        }\n    }\n\n    let backgroundColorPicker = (category) => {\n        switch (category) {\n            case 1: return \"#ECC30B\"\n            case 2: return \"#D56062\"\n            case 3: return \"#067BC2\"\n            case 4: return \"#F37748\"\n            default: return \"#84BCDA\";\n        }\n    }\n\n    let alertColorPicker = (category) => {\n        switch (category) {\n            case 1: return \"#0bb0ec\"\n            case 2: return \"#60d5d1\"\n            case 3: return \"#06c24e\"\n            case 4: return \"#48e2f3\"\n            default: return \"grey\";\n        }\n    }\n\n    const [wordsOn, setWordsOn] = useState(false);\n\n    const wordsOnSelect = () => setWordsOn(!wordsOn);\n\n\n    return (\n        <div style={{\n            backgroundColor: backgroundColorPicker(category),\n            minHeight: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            overflowY: \"hidden\",\n        }}>\n            <div className=\"container\">\n\n                {id === \"\" ?\n                    <div className=\"container text-center\">\n                        <h3>You have reached the Great Hat Game</h3>\n                        <h5>Team name registration is required to play the game</h5>\n                        <Link to=\"/\">\n                            <h6>Not registered? Go back to register your teams</h6>\n                        </Link>\n                        <h6>If you have registered, please wait whilst game loads</h6>\n                    </div> :\n                    <>\n                        <GameSetUp />\n                        {category === \"\" ?\n                            <h5>Pick a subject to start the game!</h5> :\n                            <>\n                                <h3 style={{\n                                    textAlign: \"center\",\n                                    marginBottom: \"1rem\"\n                                }}>\n                                    {\"Subject: \" + titlePicker(category)}</h3>\n\n                                <div className=\"text-center mb-4\">\n                                    <Button variant=\"danger\"\n                                        onClick={wordsOnSelect}>\n                                        {wordsOn ? \"Hide words!\" : \"Reveal words!\"}</Button>\n                                </div>\n\n                                {wordsOn ?\n                                    <Alert style={{ backgroundColor: alertColorPicker(category) }}>\n                                        <h3 style={{ textAlign: \"center\", textTransform: \"capitalize\" }}>\n                                            {categoryPicker(category, science, celebrities, geography, object, scienceNumber, celebrityNumber, geographyNumber, objectNumber)}\n                                        </h3>\n                                    </Alert>\n                                    : null}\n                                <CardGroup>\n                                    <Card>\n                                        <Card.Body style={{ backgroundColor: \"lightGrey\" }}>\n                                            <Card.Title>{team_1}</Card.Title>\n                                            <Card.Text className=\"display-1\">{score_1}</Card.Text>\n                                        </Card.Body>\n                                        <Card.Footer style={{ backgroundColor: alertColorPicker(category) }}>\n                                            <Button\n                                                variant=\"primary\"\n                                                onClick={() => handleIncrement(1)}>\n                                                Correct</Button>{' '}\n                                            <Button\n                                                variant=\"danger\"\n                                                onClick={handlePass}>\n                                                Pass</Button>\n                                        </Card.Footer>\n                                    </Card>\n                                    <Card>\n                                        <Card.Body style={{ backgroundColor: \"lightGrey\" }}>\n                                            <Card.Title>{team_2}</Card.Title>\n                                            <Card.Text className=\"display-1\">{score_2}</Card.Text>\n                                        </Card.Body>\n                                        <Card.Footer style={{ backgroundColor: alertColorPicker(category) }}>\n                                            <Button\n                                                variant=\"primary\"\n                                                onClick={() => handleIncrement(2)}>Correct</Button>{' '}\n                                            <Button\n                                                variant=\"danger\"\n                                                onClick={handlePass}>Pass</Button>\n                                        </Card.Footer>\n                                    </Card>\n                                </CardGroup>\n                                <div className=\"container\">\n                                    <Timer />\n                                </div>\n                                <div className=\"container text-center mb-4\">\n                                    <Button variant=\"dark\"\n                                        onClick={handleComplete}>\n                                        Complete Game!</Button>\n                                    {completeError ?\n                                    <h6>Error submitting game, please try again.</h6> : null}\n                                </div>\n                            </>}\n                    </>}\n            </div>\n        </div>\n    )\n}\n\nexport default GameRound;","import { connect } from \"react-redux\";\n\nimport GameRound from \"./GameRound\";\n\nimport { patchScore, patchCompleteGame } from \"../../data/actions/api\";\nimport { changeWord } from \"../../data/actions/state\";\n// mapStateToProps: maps the current state (from the store)\n// to the props that get passed into the wrapped component\n// needs to return an object literal which gets merged in\n// to any other props being passed in\n const mapStateToProps = ({ id, team_1, team_2, score_1, score_2, scienceNumber, celebrityNumber, geographyNumber, objectNumber, category, science, celebrities, geography, object }) => {\n  return {\n    id,\n    team_1,\n    team_2,\n    score_1,\n    score_2,\n    scienceNumber,\n    celebrityNumber,\n    geographyNumber,\n    objectNumber,\n    category,\n    science,\n    celebrities,\n    geography,\n    object,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleIncrement: (team) => {\n        dispatch(patchScore(team))\n    },\n    handlePass: () => {\n        dispatch(changeWord())\n    },\n    handleComplete: () => {\n        dispatch(patchCompleteGame())\n    }\n  };\n};\n\n\n// use the connect function to connect mapStateToProps\n// to the React component we want to wrap\n// returns a new React component\nexport default connect(mapStateToProps, mapDispatchToProps)(GameRound);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Completion = ({ id, team_1, team_2, score_1, score_2, complete }) => {\n\n    let decideWinner = (score_1, score_2, team_1, team_2) => {\n        if(score_1 > score_2) {\n            return team_1;\n        } else if (score_2 > score_1) {\n            return team_2;\n        } else {\n            return \"draw\";\n        }\n    };\n\n    let winner = decideWinner(score_1, score_2, team_1, team_2);\n\n    return (\n        <div style={{\n            backgroundColor: \"#84BCDA\",\n            minHeight: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            overflowY: \"hidden\",\n        }}> \n            {!complete ? \n            <div className=\"container text-center mb-4\">\n                <h1>Opps, your game isn't complete!</h1>\n            </div> : \n\n            <div className=\"container text-center mb-4\">\n                { winner === \"draw\" ?\n                <h1>It's a draw! Well done to both teams!</h1> : \n                <h1>{`${winner} are the winners! Great job!`}</h1> } \n            </div>}\n            <div className=\"container text-center\">\n                <Link to =\"/\">\n                    <button className=\"btn btn-danger m-1\">\n                        Go back to home\n                    </button>\n                </Link>\n                <Link to =\"/game-history\">\n                    <button className=\"btn btn-info m-1\">\n                        View previous game results\n                    </button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Completion;","import { connect } from \"react-redux\";\n\nimport Completion from \"./Completion\";\n\n\n// mapStateToProps: maps the current state (from the store)\n// to the props that get passed into the wrapped component\n// needs to return an object literal which gets merged in\n// to any other props being passed in\n const mapStateToProps = ({ id, team_1, team_2, score_1, score_2, complete }) => {\n  return {\n    id,\n    team_1,\n    team_2,\n    score_1,\n    score_2,\n    complete,\n    };\n};\n\n\n// use the connect function to connect mapStateToProps\n// to the React component we want to wrap\n// returns a new React component\nexport default connect(mapStateToProps)(Completion);","import React, { Component } from \"react\";\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass Loading extends Component {\n  render() {\n    const { children, loaded } = this.props;\n    return loaded ? children : (\n        <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    );\n  }\n}\n\nexport default Loading;","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Loading from \"../Loading\";\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Table from 'react-bootstrap/Table';\n\nconst GameHistory = (\n    {\n        gameHistory,\n        handleLoad,\n    }\n) => {\n    useEffect(() => {\n        handleLoad()\n    }, [handleLoad])\n\n    return (\n\n        <div style={{\n            backgroundColor: \"#84BCDA\",\n            minHeight: \"100vh\",\n            overflowY: \"hidden\",\n        }}>\n            <div className=\"container mt-3\">\n                    <Jumbotron\n                        className=\"text-center\"\n                        style={{ backgroundColor: \"#067BC2\",\n                                color: \"white\"}}>\n                        <h1>The Great Hat Game</h1>\n                        <h3>Previous game results</h3>\n                    </Jumbotron>\n                <Loading loaded={gameHistory.length}>\n                    <Table responsive striped bordered variant=\"light\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Team 1 Name</th>\n                                <th scope=\"col\">Team 2 Name</th>\n                                <th scope=\"col\">Score</th>\n                                <th scope=\"col\">Winner</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { gameHistory.map((game, index) => (\n                                <tr key={index} >\n                                    <td>{game.team_1}</td>\n                                    <td>{game.team_2}</td>\n                                    <td>{`${game.score_1} | ${game.score_2}`}</td>\n                                    <td>\n                                        {!game.complete ? \"Game not finished\" :\n                                        game.winner=== \"1\" ? game.team_1 :\n                                        game.winner=== \"2\" ? game.team_2 : \"Game drawn\"}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <div className=\"container text-center\">\n                        <Link to =\"/\">\n                            <button className=\"btn btn-danger mb-2\">\n                                Go back to home\n                            </button>\n                        </Link>\n                    </div>\n                </Loading>\n            </div>\n        </div>\n    )\n}\n\nexport default GameHistory;","import { connect } from \"react-redux\";\n\nimport GameHistory from \"./GameHistory\";\nimport { getGames } from \"../../data/actions/api\";\n\nconst mapStateToProps = ({ gameHistory }) => {\n  return {\n    gameHistory\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleLoad: () => dispatch(getGames()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameHistory);","import React from \"react\";\n\nimport history from \"./history\";\n\nimport {Router,\n        Switch,\n        Route } from \"react-router-dom\";\n\nimport StartGame from \"./components/StartGame\";\nimport GameRound from \"./components/GameRound\";\nimport Completion from \"./components/Completion\";\nimport GameHistory from \"./components/GameHistory\";\n\nconst App = () => (\n  <React.Fragment>\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\">\n          <StartGame />\n        </Route>\n        <Route exact path=\"/round\">\n          <GameRound />\n        </Route>\n        <Route exact path=\"/results\">\n          <Completion />\n        </Route>\n        <Route exact path=\"/game-history\">\n          <GameHistory />\n        </Route>\n      </Switch>\n    </Router>\n  </React.Fragment>\n);\n\nexport default App;\n","const initial = {\n    id: \"\",\n    team_1: \"\",\n    team_2: \"\",\n    score_1: 0,\n    score_2: 0,\n    complete: false,\n    science: [],\n    celebrities: [],\n    geography: [],\n    object: [],\n    scienceNumber: 0,\n    celebrityNumber: 0,\n    geographyNumber: 0,\n    objectNumber: 0,\n    category: \"\",\n    categories: [],\n    completeError: false,\n    gameHistory: [],\n};\n\nexport default initial;","import initial from \"./initial\";\n\nconst gameStart = (state, {team_1, team_2, id}) => {\n    return {\n        ...state,\n        team_1,\n        team_2,\n        id,\n    }\n}\n\nconst categoryOn = (state, {words, category}) => {\n    let newCategories = state.categories;\n    newCategories.push(category);\n    if(category===1){\n        return {\n            ...state,\n            science: words,\n            categories: newCategories,\n            category: category,\n        }\n    } else if (category===2){\n        return {\n            ...state,\n            celebrities: words,\n            categories: newCategories,\n            category: category,\n        }\n    } else if (category===3){\n        return {\n            ...state,\n            geography: words,\n            categories: newCategories,\n            category: category,\n        }\n    } else if (category===4){\n        return {\n            ...state,\n            object: words,\n            categories: newCategories,\n            category: category,\n        }\n    } \n}\n\nconst categoryUpdate = (state, {category}) => {\n    return {\n        ...state,\n        category,\n    }\n}\n\n\nconst increaseScore = (state, {score_1, score_2}) => { \n    if(state.category===1){\n        return {\n            ...state,\n            score_1,\n            score_2,\n            scienceNumber: state.scienceNumber + 1 < state.science.length ? state.scienceNumber + 1 : 0,\n        }\n    } else if (state.category===2){\n        return {\n            ...state,\n            score_1,\n            score_2,\n            celebrityNumber: state.celebrityNumber + 1 < state.celebrities.length ? state.celebrityNumber + 1 : 0,\n        }\n    } else if (state.category===3){\n        return {\n            ...state,\n            score_1,\n            score_2,\n            geographyNumber: state.geographyNumber + 1 < state.geography.length ? state.geographyNumber + 1 : 0,\n        }\n    } else if (state.category===4){\n        return {\n            ...state,\n            score_1,\n            score_2,\n            objectNumber: state.objectNumber + 1 < state.object.length ? state.objectNumber + 1 : 0,\n        }\n    } \n}\n\nconst passWordChange = (state) => {\n    if(state.category===1){\n        return {\n            ...state,\n            scienceNumber: state.scienceNumber + 1 < state.science.length ? state.scienceNumber + 1 : 0,\n        }\n    } else if (state.category===2){\n        return {\n            ...state,\n            celebrityNumber: state.celebrityNumber + 1 < state.celebrities.length ? state.celebrityNumber + 1 : 0,\n        }\n    } else if (state.category===3){\n        return {\n            ...state,\n            geographyNumber: state.geographyNumber + 1 < state.geography.length ? state.geographyNumber + 1 : 0,\n        }\n    } else if (state.category===4){\n        return {\n            ...state,\n            objectNumber: state.objectNumber + 1 < state.object.length ? state.objectNumber + 1 : 0,\n        }\n    } \n}\n\nconst completeGameReducer = (state, {complete}) => {\n    return {\n        ...state,\n        complete,\n        completeError: false,\n    }\n}\n\nconst errorCompletingReducer = (state) => {\n    return {\n        ...state,\n        completeError: true,\n    }\n}\n\nconst saveGamesReducer = (state, { gameHistory }) => {\n    return {\n        ...state,\n        gameHistory,\n    }\n}\n\nconst resetGameReducer = (state) => {\n    return {\n        ...initial,\n    }\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case \"START_GAME\": return gameStart(state, action);\n      case \"CATEGORY_SET\": return categoryOn(state, action);\n      case \"CATEGORY_UPDATE\": return categoryUpdate(state, action);\n      case \"INCREMENT_SCORE\": return increaseScore(state, action);\n      case \"PASS\": return passWordChange(state);\n      case \"COMPLETE_GAME\": return completeGameReducer(state, action);\n      case \"ERROR_COMPLETING\": return errorCompletingReducer(state);\n      case \"SAVE_GAMES\": return saveGamesReducer(state, action);\n      case \"RESET_GAME\": return resetGameReducer(state);\n      default: return state;\n    }\n}\n\nexport default reducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport persistState from \"redux-localstorage\";\n\nimport initial from './initial';\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initial,\n  composeEnhancers(applyMiddleware(thunk), persistState())\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './data/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}